Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                              ./old/stk500boot.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
LOAD ./old/stk500boot.o
LOAD ./stk500boot.o
LOAD /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb4a
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
 .init9         0x0000000000000092       0x10 ./old/stk500boot.o
                0x0000000000000092                __jumpMain
 .init9         0x00000000000000a2        0xe ./stk500boot.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b0        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000b0                __vector_22
                0x00000000000000b0                __vector_1
                0x00000000000000b0                __vector_24
                0x00000000000000b0                __vector_12
                0x00000000000000b0                __bad_interrupt
                0x00000000000000b0                __vector_6
                0x00000000000000b0                __vector_3
                0x00000000000000b0                __vector_23
                0x00000000000000b0                __vector_25
                0x00000000000000b0                __vector_11
                0x00000000000000b0                __vector_13
                0x00000000000000b0                __vector_17
                0x00000000000000b0                __vector_19
                0x00000000000000b0                __vector_7
                0x00000000000000b0                __vector_5
                0x00000000000000b0                __vector_4
                0x00000000000000b0                __vector_9
                0x00000000000000b0                __vector_2
                0x00000000000000b0                __vector_21
                0x00000000000000b0                __vector_15
                0x00000000000000b0                __vector_8
                0x00000000000000b0                __vector_14
                0x00000000000000b0                __vector_10
                0x00000000000000b0                __vector_16
                0x00000000000000b0                __vector_18
                0x00000000000000b0                __vector_20
 .text          0x00000000000000b4        0xe ./old/stk500boot.o
 .text          0x00000000000000c2       0x18 ./stk500boot.o
 .text          0x00000000000000da        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000da        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                0x00000000000000da                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000000da      0x4ee ./old/stk500boot.o
                0x00000000000000da                main
 .text.startup  0x00000000000005c8      0x57e ./stk500boot.o
 .text.libgcc.mul
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000b46                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b46        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
                0x0000000000000b46                exit
                0x0000000000000b46                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b46        0x4 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b4a                _etext = .

.data           0x0000000000800100        0x6 load address 0x0000000000000b4a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 ./old/stk500boot.o
 .data          0x0000000000800100        0x0 ./stk500boot.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100        0x3 ./old/stk500boot.o
 .rodata        0x0000000000800103        0x3 ./stk500boot.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800106                . = ALIGN (0x2)
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106        0x0
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800106        0x0 ./old/stk500boot.o
 .bss           0x0000000000800106        0x0 ./stk500boot.o
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800106                PROVIDE (__bss_end, .)
                0x0000000000000b4a                __data_load_start = LOADADDR (.data)
                0x0000000000000b50                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800106        0x0
                0x0000000000800106                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800106                PROVIDE (__noinit_end, .)
                0x0000000000800106                _end = .
                0x0000000000800106                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./old/stk500boot.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./stk500boot.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ATm328Bootloader.elf elf32-avr)
LOAD linker stubs
